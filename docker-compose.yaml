version: '3'

services:
  redis:
    image: redis:latest
    container_name: ${DATABASE_NAME}
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - database
    restart: unless-stopped

  tap:
    container_name: tap
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - database
    ports:
      - 8008:8009
    build:
      context: .
      dockerfile: ./Dockerfile_tap

  tr_rpc:
    container_name: tr_rpc
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - database
    ports:
      - ${RPC_API_PORT}:${RPC_API_PORT}
    environment:
      - SPIN_PATH=${SPIN_PATH}
      - LOG_LEVEL=${LOG_LEVEL}
      - RPC_API_HOST=${RPC_API_HOST}
      - RPC_API_PORT=${RPC_API_PORT}
      - TRANSMISSION_IP=${TRANSMISSION_IP}
      - TRANSMISSION_PORT=${TRANSMISSION_PORT}
      - TRANSMISSION_USER=${TRANSMISSION_USER}
      - TRANSMISSION_PASS=${TRANSMISSION_PASS}
      - VPN_IP=${VPN_IP}
    build:
      context: .
      dockerfile: ./Dockerfile_rpc
      args:
        - SPIN_PATH=${SPIN_PATH}
        - LOG_LEVEL=${LOG_LEVEL}
        - RPC_API_HOST=${RPC_API_HOST}
        - RPC_API_PORT=${RPC_API_PORT}
        - TRANSMISSION_IP=${TRANSMISSION_IP}
        - TRANSMISSION_PORT=${TRANSMISSION_PORT}
        - TRANSMISSION_USER=${TRANSMISSION_USER}
        - TRANSMISSION_PASS=${TRANSMISSION_PASS}
        - VPN_IP=${VPN_IP}
      
  spin:
    container_name: spin
    restart: unless-stopped
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    networks:
      - database
    environment:
      - SPIN_PATH=${SPIN_PATH}
      - DOWNLOAD_COVER_IMAGE=${DOWNLOAD_COVER_IMAGE}
      - DATABASE_NETWORK=${DATABASE_NETWORK}
      - DATABASE_NAME=${DATABASE_NAME}
      - REDIS_EXPIRE_SECONDS=${REDIS_EXPIRE_SECONDS}
      - REDIS_IP_ADDR=${REDIS_IP_ADDR}
      - REDIS_PORT=${REDIS_PORT}
      - LOG_LEVEL=${LOG_LEVEL}
      - JF_MOVIE_DIR=${JF_MOVIE_DIR}
      - TORRENT_API_HOST=${TORRENT_API_HOST}
      - TORRENT_API_PORT=${TORRENT_API_PORT}
      - TORRENT_API_PATH=${TORRENT_API_PATH}
      - TRANSMISSION_IP=${TRANSMISSION_IP}
      - RPC_API_HOST=${RPC_API_HOST}
      - RPC_API_PORT=${RPC_API_PORT}
      - TRANSMISSION_PORT=${TRANSMISSION_PORT}
      - TRANSMISSION_USER=${TRANSMISSION_USER}
      - TRANSMISSION_PASS=${TRANSMISSION_PASS}
      - VPN_IP=${VPN_IP}
      - CRON_SCHEDULE=${CRON_SCHEDULE}
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - SPIN_PATH=${SPIN_PATH}
        - DOWNLOAD_COVER_IMAGE=${DOWNLOAD_COVER_IMAGE}
        - DATABASE_NETWORK=${DATABASE_NETWORK}
        - DATABASE_NAME=${DATABASE_NAME}
        - REDIS_EXPIRE_SECONDS=${REDIS_EXPIRE_SECONDS}
        - REDIS_IP_ADDR=${REDIS_IP_ADDR}
        - REDIS_PORT=${REDIS_PORT}
        - LOG_LEVEL=${LOG_LEVEL}
        - JF_MOVIE_DIR=${JF_MOVIE_DIR}
        - TORRENT_API_HOST=${TORRENT_API_HOST}
        - TORRENT_API_PORT=${TORRENT_API_PORT}
        - TORRENT_API_PATH=${TORRENT_API_PATH}
        - TRANSMISSION_IP=${TRANSMISSION_IP}
        - RPC_API_HOST=${RPC_API_HOST}
        - RPC_API_PORT=${RPC_API_PORT}
        - TRANSMISSION_PORT=${TRANSMISSION_PORT}
        - TRANSMISSION_USER=${TRANSMISSION_USER}
        - TRANSMISSION_PASS=${TRANSMISSION_PASS}
        - VPN_IP=${VPN_IP}
        - CRON_SCHEDULE=${CRON_SCHEDULE}

volumes:
  redis_data:

networks:
  database:
    name: ${DATABASE_NETWORK}
